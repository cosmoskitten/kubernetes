// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1beta1

import (
	v1 "k8s.io/api/core/v1"
	v1beta1 "k8s.io/api/events/v1beta1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	api "k8s.io/kubernetes/pkg/api"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1beta1_Event_To_api_Event,
		Convert_api_Event_To_v1beta1_Event,
		Convert_v1beta1_EventAction_To_api_EventAction,
		Convert_api_EventAction_To_v1beta1_EventAction,
		Convert_v1beta1_EventList_To_api_EventList,
		Convert_api_EventList_To_v1beta1_EventList,
		Convert_v1beta1_EventSeries_To_api_EventSeries,
		Convert_api_EventSeries_To_v1beta1_EventSeries,
		Convert_v1beta1_EventSource_To_api_EventSource,
		Convert_api_EventSource_To_v1beta1_EventSource,
	)
}

func autoConvert_v1beta1_Event_To_api_Event(in *v1beta1.Event, out *api.Event, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.EventTime = in.EventTime
	out.Series = (*api.EventSeries)(unsafe.Pointer(in.Series))
	if err := Convert_v1beta1_EventSource_To_api_EventSource(&in.Origin, &out.Origin, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_EventAction_To_api_EventAction(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.Object = (*api.ObjectReference)(unsafe.Pointer(in.Object))
	out.SecondaryObject = (*api.ObjectReference)(unsafe.Pointer(in.SecondaryObject))
	out.Severity = api.EventSeverity(in.Severity)
	out.Message = in.Message
	return nil
}

func autoConvert_api_Event_To_v1beta1_Event(in *api.Event, out *v1beta1.Event, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Message = in.Message
	// WARNING: in.Source requires manual conversion: does not exist in peer-type
	// WARNING: in.FirstTimestamp requires manual conversion: does not exist in peer-type
	// WARNING: in.LastTimestamp requires manual conversion: does not exist in peer-type
	// WARNING: in.Count requires manual conversion: does not exist in peer-type
	// WARNING: in.Type requires manual conversion: does not exist in peer-type
	out.EventTime = in.EventTime
	out.Series = (*v1beta1.EventSeries)(unsafe.Pointer(in.Series))
	if err := Convert_api_EventSource_To_v1beta1_EventSource(&in.Origin, &out.Origin, s); err != nil {
		return err
	}
	if err := Convert_api_EventAction_To_v1beta1_EventAction(&in.Action, &out.Action, s); err != nil {
		return err
	}
	out.Object = (*v1.ObjectReference)(unsafe.Pointer(in.Object))
	out.SecondaryObject = (*v1.ObjectReference)(unsafe.Pointer(in.SecondaryObject))
	out.Severity = v1beta1.EventSeverity(in.Severity)
	return nil
}

func autoConvert_v1beta1_EventAction_To_api_EventAction(in *v1beta1.EventAction, out *api.EventAction, s conversion.Scope) error {
	out.Action = in.Action
	out.Reason = in.Reason
	return nil
}

// Convert_v1beta1_EventAction_To_api_EventAction is an autogenerated conversion function.
func Convert_v1beta1_EventAction_To_api_EventAction(in *v1beta1.EventAction, out *api.EventAction, s conversion.Scope) error {
	return autoConvert_v1beta1_EventAction_To_api_EventAction(in, out, s)
}

func autoConvert_api_EventAction_To_v1beta1_EventAction(in *api.EventAction, out *v1beta1.EventAction, s conversion.Scope) error {
	out.Action = in.Action
	out.Reason = in.Reason
	return nil
}

// Convert_api_EventAction_To_v1beta1_EventAction is an autogenerated conversion function.
func Convert_api_EventAction_To_v1beta1_EventAction(in *api.EventAction, out *v1beta1.EventAction, s conversion.Scope) error {
	return autoConvert_api_EventAction_To_v1beta1_EventAction(in, out, s)
}

func autoConvert_v1beta1_EventList_To_api_EventList(in *v1beta1.EventList, out *api.EventList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]api.Event, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Event_To_api_Event(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_EventList_To_api_EventList is an autogenerated conversion function.
func Convert_v1beta1_EventList_To_api_EventList(in *v1beta1.EventList, out *api.EventList, s conversion.Scope) error {
	return autoConvert_v1beta1_EventList_To_api_EventList(in, out, s)
}

func autoConvert_api_EventList_To_v1beta1_EventList(in *api.EventList, out *v1beta1.EventList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta1.Event, len(*in))
		for i := range *in {
			if err := Convert_api_Event_To_v1beta1_Event(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_api_EventList_To_v1beta1_EventList is an autogenerated conversion function.
func Convert_api_EventList_To_v1beta1_EventList(in *api.EventList, out *v1beta1.EventList, s conversion.Scope) error {
	return autoConvert_api_EventList_To_v1beta1_EventList(in, out, s)
}

func autoConvert_v1beta1_EventSeries_To_api_EventSeries(in *v1beta1.EventSeries, out *api.EventSeries, s conversion.Scope) error {
	out.UID = in.UID
	out.Count = in.Count
	out.LastObservedTime = in.LastObservedTime
	out.HeartbeatTime = in.HeartbeatTime
	out.State = api.EventSeriesState(in.State)
	return nil
}

// Convert_v1beta1_EventSeries_To_api_EventSeries is an autogenerated conversion function.
func Convert_v1beta1_EventSeries_To_api_EventSeries(in *v1beta1.EventSeries, out *api.EventSeries, s conversion.Scope) error {
	return autoConvert_v1beta1_EventSeries_To_api_EventSeries(in, out, s)
}

func autoConvert_api_EventSeries_To_v1beta1_EventSeries(in *api.EventSeries, out *v1beta1.EventSeries, s conversion.Scope) error {
	out.UID = in.UID
	out.Count = in.Count
	out.HeartbeatTime = in.HeartbeatTime
	out.LastObservedTime = in.LastObservedTime
	out.State = v1beta1.EventSeriesState(in.State)
	return nil
}

// Convert_api_EventSeries_To_v1beta1_EventSeries is an autogenerated conversion function.
func Convert_api_EventSeries_To_v1beta1_EventSeries(in *api.EventSeries, out *v1beta1.EventSeries, s conversion.Scope) error {
	return autoConvert_api_EventSeries_To_v1beta1_EventSeries(in, out, s)
}

func autoConvert_v1beta1_EventSource_To_api_EventSource(in *v1beta1.EventSource, out *api.EventSource, s conversion.Scope) error {
	out.Component = in.Component
	out.ID = in.ID
	return nil
}

// Convert_v1beta1_EventSource_To_api_EventSource is an autogenerated conversion function.
func Convert_v1beta1_EventSource_To_api_EventSource(in *v1beta1.EventSource, out *api.EventSource, s conversion.Scope) error {
	return autoConvert_v1beta1_EventSource_To_api_EventSource(in, out, s)
}

func autoConvert_api_EventSource_To_v1beta1_EventSource(in *api.EventSource, out *v1beta1.EventSource, s conversion.Scope) error {
	out.Component = in.Component
	// WARNING: in.Host requires manual conversion: does not exist in peer-type
	out.ID = in.ID
	return nil
}
