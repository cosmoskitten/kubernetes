/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// THIS FILE IS AUTOGENERATED - DO NOT EDIT

package app

const defaultConfigYaml = `# APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources +optional
apiVersion: componentconfig/v1alpha1
# Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds +optional
kind: KubeProxyConfiguration
# bindAddress is the IP address for the proxy server to serve on (set to 0.0.0.0 for all interfaces)
bindAddress: 0.0.0.0
# clientConnection specifies the kubeconfig file and client connection settings for the proxy server to use when communicating with the apiserver.
clientConnection:
  # acceptContentTypes defines the Accept header sent by clients when connecting to a server, overriding the default value of 'application/json'. This field will control all connections to the server used by a particular client.
  acceptContentTypes: ""
  # burst allows extra queries to accumulate when a client is exceeding its rate.
  burst: 10
  # contentType is the content type used when sending data to the server from this client.
  contentType: application/vnd.kubernetes.protobuf
  # kubeconfig is the path to a kubeconfig file.
  kubeconfig: ""
  # qps controls the number of queries per second allowed for this connection.
  qps: 5
# clusterCIDR is the CIDR range of the pods in the cluster. It is used to bridge traffic coming from outside of the cluster. If not provided, no off-cluster bridging will be performed.
clusterCIDR: ""
# configSyncPeriod is how often configuration from the apiserver is refreshed. Must be greater than 0.
configSyncPeriod: 15m0s
# conntrack contains conntrack-related configuration options.
conntrack:
  # max is the maximum number of NAT connections to track (0 to leave as-is).  This takes precedence over conntrackMaxPerCore and conntrackMin.
  max: 0
  # maxPerCore is the maximum number of NAT connections to track per CPU core (0 to leave the limit as-is and ignore conntrackMin).
  maxPerCore: 32768
  # min is the minimum value of connect-tracking records to allocate, regardless of conntrackMaxPerCore (set conntrackMaxPerCore=0 to leave the limit as-is).
  min: 131072
  # tcpCloseWaitTimeout is how long an idle conntrack entry in CLOSE_WAIT state will remain in the conntrack table. (e.g. '60s'). Must be greater than 0 to set.
  tcpCloseWaitTimeout: 1h0m0s
  # tcpEstablishedTimeout is how long an idle TCP connection will be kept open (e.g. '2s').  Must be greater than 0.
  tcpEstablishedTimeout: 24h0m0s
# enableProfiling enables profiling via web interface on /debug/pprof handler. Profiling handlers will be handled by metrics server.
enableProfiling: false
# featureGates is a comma-separated list of key=value pairs that control which alpha/beta features are enabled.
featureGates: ""
# healthzBindAddress is the IP address and port for the health check server to serve on, defaulting to 0.0.0.0:10256
healthzBindAddress: 0.0.0.0:10256
# hostnameOverride, if non-empty, will be used as the identity instead of the actual hostname.
hostnameOverride: ""
# iptables contains iptables-related configuration options.
iptables:
  # masqueradeAll tells kube-proxy to SNAT everything if using the pure iptables proxy mode.
  masqueradeAll: false
  # masqueradeBit is the bit of the iptables fwmark space to use for SNAT if using the pure iptables proxy mode. Values must be within the range [0, 31].
  masqueradeBit: 14
  # minSyncPeriod is the minimum period that iptables rules are refreshed (e.g. '5s', '1m', '2h22m').
  minSyncPeriod: 0s
  # syncPeriod is the period that iptables rules are refreshed (e.g. '5s', '1m', '2h22m').  Must be greater than 0.
  syncPeriod: 30s
# ipvs contains ipvs-related configuration options.
ipvs:
  # minSyncPeriod is the minimum period that ipvs rules are refreshed (e.g. '5s', '1m', '2h22m').
  minSyncPeriod: 0s
  # ipvs scheduler
  scheduler: ""
  # syncPeriod is the period that ipvs rules are refreshed (e.g. '5s', '1m', '2h22m').  Must be greater than 0.
  syncPeriod: 0s
# metricsBindAddress is the IP address and port for the metrics server to serve on, defaulting to 127.0.0.1:10249 (set to 0.0.0.0 for all interfaces)
metricsBindAddress: 127.0.0.1:10249
# mode specifies which proxy mode to use.
mode: ""
# oomScoreAdj is the oom-score-adj value for kube-proxy process. Values must be within the range [-1000, 1000]
oomScoreAdj: -999
# portRange is the range of host ports (beginPort-endPort, inclusive) that may be consumed in order to proxy service traffic. If unspecified (0-0) then ports will be randomly chosen.
portRange: ""
# resourceContainer is the bsolute name of the resource-only container to create and run the Kube-proxy in (Default: /kube-proxy).
resourceContainer: /kube-proxy
# udpIdleTimeout is how long an idle UDP connection will be kept open (e.g. '250ms', '2s'). Must be greater than 0. Only applicable for proxyMode=userspace.
udpIdleTimeout: 250ms
`
